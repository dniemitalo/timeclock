#Get a list of all of the hours entries for every student:
SELECT last, first, hours FROM hours JOIN students ON hours.ID = students.ID;

#Get total hours for a student:
SELECT SUM(hours) FROM hours WHERE ID=123456;

#Get list of total hours for every ID:
SELECT ID, SUM(hours) AS sum FROM hours GROUP BY ID;
SELECT last, SUM(hours) AS sum FROM hours GROUP BY ID;

#Get a list of student first and last names and hours:
SELECT last, first, SUM(hours) as sum FROM hours 
JOIN students ON hours.ID = students.ID 
GROUP BY hours.ID 
ORDER BY students.last;

#Update CoC for a batch of students:
#In this case all of the records being updated are receiving the same value so it is simpler.
UPDATE students SET CoC="Y" WHERE id in (330409,330408,330407,405681,9624,427627,511475);

#Update team for a batch of students:
#Use a case structure to assign different values to different people.
UPDATE students SET team = CASE id 
      WHEN 360049 THEN 967 
      WHEN 390453 THEN 4150
      WHEN 9528 THEN 10107
    END
     WHERE id IN (360049,390453,9528);

#Get hours from the last 10 days
select ID, hours, DATE(date) from hours WHERE date > NOW() - INTERVAL 10 DAY;

#Get hours from the last 30 days with first and last names instead of ID
SELECT last, first, SUM(hours) as sum FROM hours  
JOIN students ON hours.ID = students.ID  
WHERE hours.date > NOW() - INTERVAL 30 DAY
GROUP BY hours.ID;

#Get hours since a certain date (the date is "datetime" format in the hours table)
SELECT * FROM hours WHERE date > "2016-11-02 23:59:59";


SELECT DISTINCT